version: '3'

networks:
  nginx-php83:

services:

  # nginx
  nginx-service:
    image: nginx:stable-alpine
    container_name: nginx-container
    ports:
      - "31112:80"
    volumes:
      - ./:/var/www/project
      - ./default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php83-service
      - mysql-service
    networks:
      - nginx-php83

  # php
  php83-service:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: php83-container
    ports:
      - "9056:9000"
    volumes:
      - ./:/var/www/project
    networks:
      - nginx-php83

  # mysql
  mysql-service:
    image: mysql:latest
    container_name: mysql-container
    ports:
      - "3311:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: logistic
    volumes:
      - ./mysql-data:/var/lib/mysql
    networks:
      - nginx-php83

  mailhog:
    container_name: mailhog-container
    image: mailhog/mailhog
    restart: always
    logging:
      driver: "none"
    ports:
      - "8025:8025"
      - "1025:1025"
    networks:
      - nginx-php83
###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
